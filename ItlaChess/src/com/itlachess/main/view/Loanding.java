/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.itlachess.main.view;

import com.itlachess.main.controller.ProgressBar;
import com.sun.awt.AWTUtilities;

/**
 *
 * @author Christian
 */
public final class Loanding extends javax.swing.JFrame {

   private static Loanding instance;
   ProgressBar thread;
   double i=50, j=1;
   
    public static synchronized Loanding getInstance(){
        return instance == null ? instance = new Loanding() : instance;
    }
    
    private Loanding(){
        initComponents();
        setLocationRelativeTo(null);
        thread = new ProgressBar(getProgressBar());
        thread.start();
        thread = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProgressBar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/com/itlachess/main/view/img/icon.png")).getImage());
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ProgressBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ProgressBarStateChanged(evt);
            }
        });
        getContentPane().add(ProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 140, -1));

        jLabel1.setBackground(javax.swing.UIManager.getDefaults().getColor("Label.disabledForeground"));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Christian\\Documents\\Img - Ajedrez\\imagenes chess\\imagen de carga.png")); // NOI18N
        jLabel1.setText("ds");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -1, 420, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProgressBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ProgressBarStateChanged
        if(ProgressBar.getValue() == i){
           if(j!=101){
               AWTUtilities.setWindowOpacity(this, Float.valueOf((100-j)/100+"f"));
               i++;
               j+=2;
           }
        }
        if(ProgressBar.getValue() == 100){
            SignIn.getInstance().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_ProgressBarStateChanged

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the ProgressBar
     */
    public javax.swing.JProgressBar getProgressBar() {
        return ProgressBar;
    }

    /**
     * @param ProgressBar the ProgressBar to set
     */
    public void setProgressBar(javax.swing.JProgressBar ProgressBar) {
        this.ProgressBar = ProgressBar;
    }
}
